info = {'likelihood': {'planck_2018_highl_plik.TTTEEE': None,
                'planck_2018_lensing.clik': None,
                'planck_2018_lowl.EE': None,
                'planck_2018_lowl.TT': None},
 'params': {'100*theta_s': {'derived': False,
                            'value': 'lambda theta_s_1e2: theta_s_1e2'},
            'A': {'derived': 'lambda A_s: 1e9*A_s',
                  'latex': '10^9 A_\\mathrm{s}'},
            'A_s': {'latex': 'A_\\mathrm{s}',
                    'value': 'lambda logA: 1e-10*np.exp(logA)'},
            'H0': {'latex': 'H_0'},
            'Omega_Lambda': {'latex': '\\Omega_\\Lambda'},
            'Omega_k': {'latex': '\\Omega_k',
                        'prior': {'max': 0.3, 'min': -0.3},
                        'proposal': 0.001,
                        'ref': {'dist': 'norm', 'loc': -0.009, 'scale': 0.001}},
            'Omega_m': {'latex': '\\Omega_\\mathrm{m}'},
            'YHe': {'latex': 'Y_\\mathrm{P}'},
            'age': {'latex': '{\\rm{Age}}/\\mathrm{Gyr}'},
            'clamp': {'derived': 'lambda A_s, tau_reio: '
                                 '1e9*A_s*np.exp(-2*tau_reio)',
                      'latex': '10^9 A_\\mathrm{s} e^{-2\\tau}'},
            'logA': {'drop': True,
                     'latex': '\\log(10^{10} A_\\mathrm{s})',
                     'prior': {'max': 3.91, 'min': 1.61},
                     'proposal': 0.001,
                     'ref': {'dist': 'norm', 'loc': 3.05, 'scale': 0.001}},
            'm_ncdm': {'renames': 'mnu', 'value': 0.06},
            'n_s': {'latex': 'n_\\mathrm{s}',
                    'prior': {'max': 1.2, 'min': 0.8},
                    'proposal': 0.002,
                    'ref': {'dist': 'norm', 'loc': 0.965, 'scale': 0.004}},
            'omega_b': {'latex': '\\Omega_\\mathrm{b} h^2',
                        'prior': {'max': 0.1, 'min': 0.005},
                        'proposal': 0.0001,
                        'ref': {'dist': 'norm',
                                'loc': 0.0224,
                                'scale': 0.0001}},
            'omega_cdm': {'latex': '\\Omega_\\mathrm{c} h^2',
                          'prior': {'max': 0.99, 'min': 0.001},
                          'proposal': 0.0005,
                          'ref': {'dist': 'norm', 'loc': 0.12, 'scale': 0.001}},
            'omegamh2': {'derived': 'lambda Omega_m, H0: Omega_m*(H0/100)**2',
                         'latex': '\\Omega_\\mathrm{m} h^2'},
            'rs_drag': {'latex': 'r_\\mathrm{drag}'},
            's8h5': {'derived': 'lambda sigma8, H0: sigma8*(H0*1e-2)**(-0.5)',
                     'latex': '\\sigma_8/h^{0.5}'},
            's8omegamp25': {'derived': 'lambda sigma8, Omega_m: '
                                       'sigma8*Omega_m**0.25',
                            'latex': '\\sigma_8 \\Omega_\\mathrm{m}^{0.25}'},
            's8omegamp5': {'derived': 'lambda sigma8, Omega_m: '
                                      'sigma8*Omega_m**0.5',
                           'latex': '\\sigma_8 \\Omega_\\mathrm{m}^{0.5}'},
            'sigma8': {'latex': '\\sigma_8'},
            'tau_reio': {'latex': '\\tau_\\mathrm{reio}',
                         'prior': {'max': 0.8, 'min': 0.01},
                         'proposal': 0.003,
                         'ref': {'dist': 'norm', 'loc': 0.055, 'scale': 0.006}},
            'theta_s_1e2': {'drop': True,
                            'latex': '100\\theta_\\mathrm{s}',
                            'prior': {'max': 10, 'min': 0.5},
                            'proposal': 0.0002,
                            'ref': {'dist': 'norm',
                                    'loc': 1.0416,
                                    'scale': 0.0004}},
            'z_reio': {'latex': 'z_\\mathrm{re}'}},
 'sampler': {'mcmc': {'covmat': 'auto',
                      'drag': True,
                      'oversample_power': 0.4,
                      'proposal_scale': 1.9}},
 'theory': {'classy': {'extra_args': {'N_ncdm': 1,
                                      'N_ur': 2.0328,
                                      'hmcode_min_k_max': 20,
                                      'non linear': 'hmcode'}}}}

from cobaya.run import run

updated_info, sampler = run(info)
